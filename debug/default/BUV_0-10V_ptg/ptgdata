######################## Scripts ########################
EnterTMOD_LV= b'\x42\xb0\x94\x01\x00\xa0\xfa\x00\xb2\x00\xb1\x94\x02\x00\xa0\xfa\x00\xb4\x50\x48\x43\x4d\xba\xbb'
EnterTMOD_HV= b'\xb1\x94\x02\x00\xb2\x00\x41\xb0\x94\x05\x00'
ExitTMOD= b'\xb2\x03\xb1\x94\x01\x00\xa0\x01\x00'
GetDeviceID= b'\x95\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\xac\x06\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xa4\xb5\x06\x04\x00\x00\x00\xa0\x05\x00\x80\xb1\x94\x01\x00\xa0\x01\x00\x6b\x02'
ReadProgmem= b'\x91\x00\x91\x01\x93\x01\x02\x00\x62\x00\x16\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\x95\xad\x01\xb5\x06\x04\x00\x00\x00\xa0\x05\x00\x80\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xae'
ReadConfigmem= b'\x91\x00\x91\x01\x93\x01\x02\x00\x69\x00\x00\x20\x00\x00\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\x62\x00\x2d\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\x95\xad\x01\xb5\x06\x04\x00\x00\x00\xa0\x05\x00\x80\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xae'
WriteConfigmem= b'\x91\x00\x91\x01\x90\x02\x00\x20\x00\x00\x6a\x00\x02\x93\x01\x02\x00\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\x62\x00\x31\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xad\x01\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\x81\xb5\x06\x08\x00\x00\x00\xa0\x88\x13\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xae'
WriteIDmem= b'\x91\x00\x91\x01\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\xac\x04\x00\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\x81\xb5\x06\x08\x00\x00\x00\xa0\x88\x13\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xa4'
EraseChip= b'\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\xb5\x06\x09\x00\x00\x00\xa0\x70\x17'
EraseProgmemRange= b'\x91\x00\x91\x01\xf5\x01\x10\x00\x93\x01\x02\x00\x62\x00\x19\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xad\x01\xb5\x06\x11\x00\x00\x00\xa0\xc4\x09\xac\x10\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xa4\xae'
GetVersionDE= b'\x95\x31\x01\x00\x00\x04\x00'
GetPC= b'\x95\x31\x04\x00\x00\x02\x00'
Run= b'\x31\x05\x00\x00\x00\x00\x94\x64\x00'
SingleStep= b'\x31\x06\x00\x00\x00\x00'
ReadRAM= b'\x91\x00\x91\x01\x90\x02\x04\x00\x00\x00\x64\x00\x02\x64\x01\x02\x95\x33\x02\x02\x01'
WriteRAM= b'\x91\x00\x91\x01\x90\x02\x00\x00\x00\x00\x64\x00\x02\x64\x01\x02\x92\x01\x04\x00\x00\x00\x33\x03\x01\x02'
Halt= b'\x30\xb6\x94\x64\x00'
GetHaltStatus= b'\x32'
EnterDebugMode= b'\xb2\x03\xb1\x94\x64\x00\x42\xa0\x10\x27\xb0\x94\x64\x00\xb6\xa0\x98\x3a\x30'
WriteDebugVector= b'\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\xac\x04\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xa4\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\xb5\x10\x20\x50\x00\x00\xb5\x06\x08\x00\x00\x00\xa0\x88\x13\xb5\x06\x06\x00\x00\x00\xa0\x05\x00'
WriteProgmem= b'\x91\x00\x91\x01\x93\x01\x02\x00\x60\x04\x01\x93\x04\x10\x00\x62\x00\x1c\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xad\x04\xac\x0f\x00\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\x81\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xa4\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\x81\xb5\x06\x08\x00\x00\x00\xa0\xc4\x09\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xae'
SetSpeedFromDevice= b'\xec\xfa\x00\x00\x00'
EraseTestmemRange= b'\x91\x00\x91\x01\x90\x02\x00\x20\x00\x00\x6a\x00\x02\x93\x01\x02\x00\x60\x04\x01\x93\x04\x10\x00\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\x62\x02\x2e\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xad\x04\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\xb5\x06\x08\x00\x00\x00\xa0\xc4\x09\x90\x05\x10\x00\x00\x00\x62\x05\x56\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xae'
WriteConfigmemDE= b'\x91\x00\x91\x01\x90\x02\x00\x20\x00\x00\x6a\x00\x02\x93\x01\x02\x00\xb5\x06\x00\x00\x00\x00\xa0\x05\x00\xb5\x10\xfe\x7f\x00\x00\xa0\x05\x00\x62\x00\x31\x00\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\x63\xad\x01\xb5\x06\x02\x00\x00\x00\xa0\x05\x00\x81\xb5\x06\x08\x00\x00\x00\xa0\x88\x13\xb5\x06\x06\x00\x00\x00\xa0\x05\x00\xae'

######################## Device Info ########################
dev = DeviceInfo()
dev.deviceName = "PIC10F322"
dev.programmerType = "PIC16ENH"
dev.family = "Mid-Range 8-bit MCUs (PIC10/12/16/MCP)"
dev.subFamily = "Midrange"
dev.useRowEraseIfVoltageIsLow = False
dev.voltageBelowWhichUseRowErase = 0
dev.Vpp = 9000
dev.deviceIDMask = 0x3fe0
dev.deviceID = 0x2980
memTypeInfo = []
memInf = MemInfo()
memInf.type = "Pgm"
memInf.exists = True
memInf.startAddr = 0x0
memInf.endAddr = 0x1ff
memInf.rowSize = 0x20
memInf.rowEraseSize = 0x20
memInf.addrInc = 0x1
memInf.widthProgram = 0x2
memInf.mask = 0x3fff
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "Cfg"
memInf.exists = True
memInf.startAddr = 0x2007
memInf.endAddr = 0x2007
memInf.rowSize = 0x2
memInf.rowEraseSize = 0x0
memInf.addrInc = 0x1
memInf.widthProgram = 0x2
memInf.mask = 0x3fff
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "BootFlash"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "EEData"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "UserID"
memInf.exists = True
memInf.startAddr = 0x2000
memInf.endAddr = 0x2003
memInf.rowSize = 0x2
memInf.rowEraseSize = 0x0
memInf.addrInc = 0x1
memInf.widthProgram = 0x2
memInf.mask = 0x3fff
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "Test"
memInf.exists = True
memInf.startAddr = 0x2000
memInf.endAddr = 0x20ff
memInf.rowSize = 0x20
memInf.rowEraseSize = 0x20
memInf.addrInc = 0x1
memInf.widthProgram = 0x2
memInf.mask = 0x3fff
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "FileRegs"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "Periph"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "DataFlash"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "FlashData"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "Emulation"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "NMMR"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "InstructionRam"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "UserOTP"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "FBoot"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "EDS"
memInf.exists = False
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "DevID"
memInf.exists = True
memInf.startAddr = 0x2006
memInf.endAddr = 0x2006
memInf.rowSize = 0x1
memInf.rowEraseSize = 0x0
memInf.addrInc = 0x1
memInf.widthProgram = 0x1
memInf.mask = 0x7fffffff
memTypeInfo.append(memInf)
memInf = MemInfo()
memInf.type = "Calibration"
memInf.exists = False
memTypeInfo.append(memInf)
dev.setMemInfo(memTypeInfo)

######################## Power Info ########################
power = PowerInfo()
power.shutDownSystem = False
power.isToolPower = True
power.useVPPfirst = False
power.useLowVoltageProgramming = False
power.useMaintainActivePower = False
power.voltage = 4000

######################## Tool Info ########################
tool = ToolInfo()
tool.speedLevel = 1
tool.PGCResistance = 4700
tool.PGDResistance = 4700
tool.PGCPullDir = 2
tool.PGDPullDir = 2
tool.ICSPSelected = 0

######################## Operation Info ########################
o = Opinfo("read",0x0)
t = Tinfo()
o.addTI(t)
oi.append(o)

######################## Operation Info ########################
o = Opinfo("erase",0x0)
oi.append(o)

######################## Operation Info ########################
o = Opinfo("write",0x0)
t = Tinfo()
t.start = 0x2007
t.end = 0x2007
t.data = "write_Cfg_st_0x2007_op2_0.dat"
t.type = "Cfg"
t.mask = 0x0
o.addTI(t)
oi.append(o)

######################## Operation Info ########################
o = Opinfo("write",0x0)
t = Tinfo()
t.start = 0x0
t.end = 0x4f
t.data = "write_Pgm_st_0x0_op3_0.dat"
t.type = "Pgm"
t.mask = 0x0
o.addTI(t)
t = Tinfo()
t.start = 0x2007
t.end = 0x2007
t.data = "write_Cfg_st_0x2007_op3_1.dat"
t.type = "Cfg"
t.mask = 0x0
o.addTI(t)
oi.append(o)

######################## Operation Info ########################
o = Opinfo("releasefromreset",0x0)
oi.append(o)

