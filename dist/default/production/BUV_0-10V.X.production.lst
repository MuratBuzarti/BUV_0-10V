

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Tue Aug 17 10:48:40 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	intentry,global,class=CODE,delta=2
    14                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    15                           	dabs	1,0x7E,2
    16  0000                     
    17                           ; Version 2.32
    18                           ; Generated 23/11/2020 GMT
    19                           ; 
    20                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution. Publication is not required when
    34                           ;        this file is used in an embedded application.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC10F322 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     	;# 
    53  0001                     	;# 
    54  0002                     	;# 
    55  0003                     	;# 
    56  0004                     	;# 
    57  0005                     	;# 
    58  0006                     	;# 
    59  0007                     	;# 
    60  0008                     	;# 
    61  0009                     	;# 
    62  000A                     	;# 
    63  000B                     	;# 
    64  000C                     	;# 
    65  000D                     	;# 
    66  000E                     	;# 
    67  000F                     	;# 
    68  0010                     	;# 
    69  0011                     	;# 
    70  0012                     	;# 
    71  0013                     	;# 
    72  0014                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0016                     	;# 
    76  0017                     	;# 
    77  0018                     	;# 
    78  0019                     	;# 
    79  0019                     	;# 
    80  001A                     	;# 
    81  001B                     	;# 
    82  001C                     	;# 
    83  001D                     	;# 
    84  001E                     	;# 
    85  001F                     	;# 
    86  0020                     	;# 
    87  0020                     	;# 
    88  0021                     	;# 
    89  0022                     	;# 
    90  0022                     	;# 
    91  0023                     	;# 
    92  0024                     	;# 
    93  0025                     	;# 
    94  0026                     	;# 
    95  0027                     	;# 
    96  0027                     	;# 
    97  0028                     	;# 
    98  0029                     	;# 
    99  002A                     	;# 
   100  002A                     	;# 
   101  002B                     	;# 
   102  002C                     	;# 
   103  002D                     	;# 
   104  002E                     	;# 
   105  0030                     	;# 
   106  0031                     	;# 
   107  0032                     	;# 
   108  0033                     	;# 
   109  0034                     	;# 
   110  0035                     	;# 
   111  0036                     	;# 
   112  0037                     	;# 
   113  0038                     	;# 
   114  0039                     	;# 
   115  003A                     	;# 
   116  003B                     	;# 
   117  003C                     	;# 
   118  003D                     	;# 
   119  003E                     	;# 
   120  003F                     	;# 
   121  0000                     	;# 
   122  0001                     	;# 
   123  0002                     	;# 
   124  0003                     	;# 
   125  0004                     	;# 
   126  0005                     	;# 
   127  0006                     	;# 
   128  0007                     	;# 
   129  0008                     	;# 
   130  0009                     	;# 
   131  000A                     	;# 
   132  000B                     	;# 
   133  000C                     	;# 
   134  000D                     	;# 
   135  000E                     	;# 
   136  000F                     	;# 
   137  0010                     	;# 
   138  0011                     	;# 
   139  0012                     	;# 
   140  0013                     	;# 
   141  0014                     	;# 
   142  0015                     	;# 
   143  0016                     	;# 
   144  0016                     	;# 
   145  0017                     	;# 
   146  0018                     	;# 
   147  0019                     	;# 
   148  0019                     	;# 
   149  001A                     	;# 
   150  001B                     	;# 
   151  001C                     	;# 
   152  001D                     	;# 
   153  001E                     	;# 
   154  001F                     	;# 
   155  0020                     	;# 
   156  0020                     	;# 
   157  0021                     	;# 
   158  0022                     	;# 
   159  0022                     	;# 
   160  0023                     	;# 
   161  0024                     	;# 
   162  0025                     	;# 
   163  0026                     	;# 
   164  0027                     	;# 
   165  0027                     	;# 
   166  0028                     	;# 
   167  0029                     	;# 
   168  002A                     	;# 
   169  002A                     	;# 
   170  002B                     	;# 
   171  002C                     	;# 
   172  002D                     	;# 
   173  002E                     	;# 
   174  0030                     	;# 
   175  0031                     	;# 
   176  0032                     	;# 
   177  0033                     	;# 
   178  0034                     	;# 
   179  0035                     	;# 
   180  0036                     	;# 
   181  0037                     	;# 
   182  0038                     	;# 
   183  0039                     	;# 
   184  003A                     	;# 
   185  003B                     	;# 
   186  003C                     	;# 
   187  003D                     	;# 
   188  003E                     	;# 
   189  003F                     	;# 
   190                           
   191                           	psect	idataBANK0
   192  00B4                     __pidataBANK0:
   193                           
   194                           ;initializer for _PWM_period
   195  00B4  3419               	retlw	25
   196  0013                     _T2CON	set	19
   197  0012                     _PR2	set	18
   198  0009                     _WPUA	set	9
   199  0008                     _ANSELA	set	8
   200  0006                     _TRISA	set	6
   201  0005                     _PORTA	set	5
   202  0010                     _OSCCON	set	16
   203  0061                     _TMR2IF	set	97
   204  002A                     _RA2	set	42
   205  0028                     _RA0	set	40
   206  0029                     _RA1	set	41
   207  002B                     _RA3	set	43
   208  005F                     _GIE	set	95
   209  0069                     _TMR2IE	set	105
   210  005E                     _PEIE	set	94
   211                           
   212                           	psect	cinit
   213  000B                     start_initialization:	
   214                           ; #config settings
   215                           
   216  000B                     __initialization:
   217                           
   218                           ; Initialize objects allocated to BANK0
   219  000B  20B4               	fcall	__pidataBANK0	;fetch initializer
   220  000C  00CD               	movwf	__pdataBANK0& (0+127)
   221                           
   222                           ; Clear objects allocated to BANK0
   223  000D  01C0               	clrf	__pbssBANK0& (0+127)
   224  000E  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   225  000F  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   226  0010  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   227  0011  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   228  0012  01C5               	clrf	(__pbssBANK0+5)& (0+127)
   229  0013  01C6               	clrf	(__pbssBANK0+6)& (0+127)
   230  0014                     end_of_initialization:	
   231                           ;End of C runtime variable initialization code
   232                           
   233  0014                     __end_of__initialization:
   234  0014  0183               	clrf	3
   235  0015  2816               	ljmp	_main	;jump to C main() function
   236                           
   237                           	psect	bssBANK0
   238  0040                     __pbssBANK0:
   239  0040                     _NoCommandCounter:
   240  0040                     	ds	2
   241  0042                     _time_counter:
   242  0042                     	ds	2
   243  0044                     _PWM_set:
   244  0044                     	ds	1
   245  0045                     _PWM_counter:
   246  0045                     	ds	1
   247  0046                     _PWM_high:
   248  0046                     	ds	1
   249                           
   250                           	psect	dataBANK0
   251  004D                     __pdataBANK0:
   252  004D                     _PWM_period:
   253  004D                     	ds	1
   254                           
   255                           	psect	cstackCOMMON
   256  0000                     __pcstackCOMMON:
   257  0000                     ??_init:
   258                           
   259                           	psect	cstackBANK0
   260  0047                     __pcstackBANK0:	
   261                           ; 1 bytes @ 0x0
   262                           
   263  0047                     ?_init:
   264  0047                     ?_main:	
   265                           ; 1 bytes @ 0x0
   266                           
   267  0047                     ?_tmr2Int:	
   268                           ; 1 bytes @ 0x0
   269                           
   270  0047                     ??_tmr2Int:	
   271                           ; 1 bytes @ 0x0
   272                           
   273                           
   274                           ; 1 bytes @ 0x0
   275  0047                     	ds	3
   276  004A                     ??_main:
   277                           
   278                           ; 1 bytes @ 0x3
   279  004A                     	ds	3
   280                           
   281                           	psect	maintext
   282  0016                     __pmaintext:	
   283 ;;
   284 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   285 ;;
   286 ;; *************** function _main *****************
   287 ;; Defined at:
   288 ;;		line 28 in file "main.c"
   289 ;; Parameters:    Size  Location     Type
   290 ;;		None
   291 ;; Auto vars:     Size  Location     Type
   292 ;;		None
   293 ;; Return value:  Size  Location     Type
   294 ;;                  1    wreg      void 
   295 ;; Registers used:
   296 ;;		wreg, status,2, status,0, pclath, cstack
   297 ;; Tracked objects:
   298 ;;		On entry : B00/0
   299 ;;		On exit  : 0/0
   300 ;;		Unchanged: 0/0
   301 ;; Data sizes:     COMMON   BANK0
   302 ;;      Params:         0       0
   303 ;;      Locals:         0       0
   304 ;;      Temps:          0       3
   305 ;;      Totals:         0       3
   306 ;;Total ram usage:        3 bytes
   307 ;; Hardware stack levels required when called: 2
   308 ;; This function calls:
   309 ;;		_init
   310 ;; This function is called by:
   311 ;;		Startup code after reset
   312 ;; This function uses a non-reentrant model
   313 ;;
   314                           
   315                           
   316                           ;psect for function _main
   317  0016                     _main:
   318  0016                     l673:	
   319                           ;incstack = 0
   320                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   321                           
   322                           
   323                           ;main.c: 30:     init();
   324  0016  20A6               	fcall	_init
   325  0017                     l675:
   326                           
   327                           ;main.c: 31:     GIE = 1;
   328  0017  178B               	bsf	11,7	;volatile
   329  0018                     l677:
   330                           
   331                           ;main.c: 34:     {;main.c: 47:         _delay((unsigned long)((500)*(8000000/4000000.0))
      +                          );
   332  0018  30C7               	movlw	199
   333  0019  00CA               	movwf	??_main
   334  001A                     u237:
   335  001A  281B               	nop2
   336  001B  0BCA               	decfsz	??_main,f
   337  001C  281A               	goto	u237
   338  001D  281E               	nop2
   339  001E  281F               	nop2
   340  001F                     l679:
   341                           
   342                           ;main.c: 49:         if(PWM_high<PWM_set)
   343  001F  0844               	movf	_PWM_set,w
   344  0020  0246               	subwf	_PWM_high,w
   345  0021  1803               	skipnc
   346  0022  2824               	goto	u121
   347  0023  2825               	goto	u120
   348  0024                     u121:
   349  0024  2836               	goto	l685
   350  0025                     u120:
   351  0025                     l681:
   352                           
   353                           ;main.c: 50:         {;main.c: 51:             _delay((unsigned long)((250)*(8000000/400
      +                          0.0)));
   354  0025  3003               	movlw	3
   355  0026  00CC               	movwf	??_main+2
   356  0027  308A               	movlw	138
   357  0028  00CB               	movwf	??_main+1
   358  0029  3055               	movlw	85
   359  002A  00CA               	movwf	??_main
   360  002B                     u247:
   361  002B  0BCA               	decfsz	??_main,f
   362  002C  282B               	goto	u247
   363  002D  0BCB               	decfsz	??_main+1,f
   364  002E  282B               	goto	u247
   365  002F  0BCC               	decfsz	??_main+2,f
   366  0030  282B               	goto	u247
   367  0031  2832               	nop2
   368  0032                     l683:
   369                           
   370                           ;main.c: 52:             PWM_high++;
   371  0032  3001               	movlw	1
   372  0033  00CA               	movwf	??_main
   373  0034  084A               	movf	??_main,w
   374  0035  07C6               	addwf	_PWM_high,f
   375  0036                     l685:
   376                           
   377                           ;main.c: 55:         if(PWM_high>PWM_set)
   378  0036  0846               	movf	_PWM_high,w
   379  0037  0244               	subwf	_PWM_set,w
   380  0038  1803               	skipnc
   381  0039  283B               	goto	u131
   382  003A  283C               	goto	u130
   383  003B                     u131:
   384  003B  284B               	goto	l691
   385  003C                     u130:
   386  003C                     l687:
   387                           
   388                           ;main.c: 56:         {;main.c: 57:             _delay((unsigned long)((250)*(8000000/400
      +                          0.0)));
   389  003C  3003               	movlw	3
   390  003D  00CC               	movwf	??_main+2
   391  003E  308A               	movlw	138
   392  003F  00CB               	movwf	??_main+1
   393  0040  3055               	movlw	85
   394  0041  00CA               	movwf	??_main
   395  0042                     u257:
   396  0042  0BCA               	decfsz	??_main,f
   397  0043  2842               	goto	u257
   398  0044  0BCB               	decfsz	??_main+1,f
   399  0045  2842               	goto	u257
   400  0046  0BCC               	decfsz	??_main+2,f
   401  0047  2842               	goto	u257
   402  0048  2849               	nop2
   403  0049                     l689:
   404                           
   405                           ;main.c: 58:             PWM_high--;
   406  0049  3001               	movlw	1
   407  004A  02C6               	subwf	_PWM_high,f
   408  004B                     l691:
   409                           
   410                           ;main.c: 61:         if (RA3 == 0) {
   411  004B  1985               	btfsc	5,3	;volatile
   412  004C  284E               	goto	u141
   413  004D  284F               	goto	u140
   414  004E                     u141:
   415  004E  2855               	goto	l697
   416  004F                     u140:
   417  004F                     l693:
   418                           
   419                           ;main.c: 62:             PWM_set = 8;
   420  004F  3008               	movlw	8
   421  0050  00CA               	movwf	??_main
   422  0051  084A               	movf	??_main,w
   423  0052  00C4               	movwf	_PWM_set
   424  0053                     l695:
   425                           
   426                           ;main.c: 63:             NoCommandCounter = 0;
   427  0053  01C0               	clrf	_NoCommandCounter
   428  0054  01C1               	clrf	_NoCommandCounter+1
   429  0055                     l697:
   430                           
   431                           ;main.c: 66:         if (RA1 == 0) {
   432  0055  1885               	btfsc	5,1	;volatile
   433  0056  2858               	goto	u151
   434  0057  2859               	goto	u150
   435  0058                     u151:
   436  0058  285F               	goto	l703
   437  0059                     u150:
   438  0059                     l699:
   439                           
   440                           ;main.c: 67:             PWM_set = 12;
   441  0059  300C               	movlw	12
   442  005A  00CA               	movwf	??_main
   443  005B  084A               	movf	??_main,w
   444  005C  00C4               	movwf	_PWM_set
   445  005D                     l701:
   446                           
   447                           ;main.c: 68:             NoCommandCounter = 0;
   448  005D  01C0               	clrf	_NoCommandCounter
   449  005E  01C1               	clrf	_NoCommandCounter+1
   450  005F                     l703:
   451                           
   452                           ;main.c: 71:         if (RA0 == 0) {
   453  005F  1805               	btfsc	5,0	;volatile
   454  0060  2862               	goto	u161
   455  0061  2863               	goto	u160
   456  0062                     u161:
   457  0062  2869               	goto	l709
   458  0063                     u160:
   459  0063                     l705:
   460                           
   461                           ;main.c: 72:             PWM_set = 18;
   462  0063  3012               	movlw	18
   463  0064  00CA               	movwf	??_main
   464  0065  084A               	movf	??_main,w
   465  0066  00C4               	movwf	_PWM_set
   466  0067                     l707:
   467                           
   468                           ;main.c: 73:             NoCommandCounter = 0;
   469  0067  01C0               	clrf	_NoCommandCounter
   470  0068  01C1               	clrf	_NoCommandCounter+1
   471  0069                     l709:
   472                           
   473                           ;main.c: 77:         if ((RA3==1)&&(RA1==1)&&(RA0==1))
   474  0069  1D85               	btfss	5,3	;volatile
   475  006A  286C               	goto	u171
   476  006B  286D               	goto	u170
   477  006C                     u171:
   478  006C  2818               	goto	l677
   479  006D                     u170:
   480  006D                     l711:
   481  006D  1C85               	btfss	5,1	;volatile
   482  006E  2870               	goto	u181
   483  006F  2871               	goto	u180
   484  0070                     u181:
   485  0070  2818               	goto	l677
   486  0071                     u180:
   487  0071                     l713:
   488  0071  1C05               	btfss	5,0	;volatile
   489  0072  2874               	goto	u191
   490  0073  2875               	goto	u190
   491  0074                     u191:
   492  0074  2818               	goto	l677
   493  0075                     u190:
   494  0075                     l715:
   495                           
   496                           ;main.c: 78:         {;main.c: 79:             NoCommandCounter++;
   497  0075  3001               	movlw	1
   498  0076  07C0               	addwf	_NoCommandCounter,f
   499  0077  1803               	skipnc
   500  0078  0AC1               	incf	_NoCommandCounter+1,f
   501  0079  3000               	movlw	0
   502  007A  07C1               	addwf	_NoCommandCounter+1,f
   503                           
   504                           ;main.c: 80:             if (NoCommandCounter>=1000)
   505  007B  3003               	movlw	3
   506  007C  0241               	subwf	_NoCommandCounter+1,w
   507  007D  30E8               	movlw	232
   508  007E  1903               	skipnz
   509  007F  0240               	subwf	_NoCommandCounter,w
   510  0080  1C03               	skipc
   511  0081  2883               	goto	u201
   512  0082  2884               	goto	u200
   513  0083                     u201:
   514  0083  2818               	goto	l677
   515  0084                     u200:
   516  0084                     l717:
   517                           
   518                           ;main.c: 81:             {;main.c: 82:                 PWM_high = 0;
   519  0084  01C6               	clrf	_PWM_high
   520  0085                     l719:
   521                           
   522                           ;main.c: 83:                 NoCommandCounter=1000;
   523  0085  30E8               	movlw	232
   524  0086  00C0               	movwf	_NoCommandCounter
   525  0087  3003               	movlw	3
   526  0088  00C1               	movwf	_NoCommandCounter+1
   527  0089  2818               	goto	l677
   528  008A  280A               	ljmp	start
   529  008B                     __end_of_main:
   530                           
   531                           	psect	text1
   532  00A6                     __ptext1:	
   533 ;; *************** function _init *****************
   534 ;; Defined at:
   535 ;;		line 13 in file "functions.c"
   536 ;; Parameters:    Size  Location     Type
   537 ;;		None
   538 ;; Auto vars:     Size  Location     Type
   539 ;;		None
   540 ;; Return value:  Size  Location     Type
   541 ;;                  1    wreg      void 
   542 ;; Registers used:
   543 ;;		wreg, status,2
   544 ;; Tracked objects:
   545 ;;		On entry : 0/0
   546 ;;		On exit  : 0/0
   547 ;;		Unchanged: 0/0
   548 ;; Data sizes:     COMMON   BANK0
   549 ;;      Params:         0       0
   550 ;;      Locals:         0       0
   551 ;;      Temps:          0       0
   552 ;;      Totals:         0       0
   553 ;;Total ram usage:        0 bytes
   554 ;; Hardware stack levels used: 1
   555 ;; Hardware stack levels required when called: 1
   556 ;; This function calls:
   557 ;;		Nothing
   558 ;; This function is called by:
   559 ;;		_main
   560 ;; This function uses a non-reentrant model
   561 ;;
   562                           
   563                           
   564                           ;psect for function _init
   565  00A6                     _init:
   566  00A6                     l657:	
   567                           ;incstack = 0
   568                           ; Regs used in _init: [wreg+status,2]
   569                           
   570                           
   571                           ;functions.c: 16:     OSCCON=0b01100000;
   572  00A6  3060               	movlw	96
   573  00A7  0090               	movwf	16	;volatile
   574  00A8                     l659:
   575                           
   576                           ;functions.c: 19:     PORTA=0;
   577  00A8  0185               	clrf	5	;volatile
   578  00A9                     l661:
   579                           
   580                           ;functions.c: 20:     TRISA=0b00001011;
   581  00A9  300B               	movlw	11
   582  00AA  0086               	movwf	6	;volatile
   583                           
   584                           ;functions.c: 21:     ANSELA=0;
   585  00AB  0188               	clrf	8	;volatile
   586                           
   587                           ;functions.c: 22:     WPUA=0;
   588  00AC  0189               	clrf	9	;volatile
   589  00AD                     l663:
   590                           
   591                           ;functions.c: 25:     PR2=50;
   592  00AD  3032               	movlw	50
   593  00AE  0092               	movwf	18	;volatile
   594  00AF                     l665:
   595                           
   596                           ;functions.c: 26:     T2CON=0b00000100;
   597  00AF  3004               	movlw	4
   598  00B0  0093               	movwf	19	;volatile
   599  00B1                     l667:
   600                           
   601                           ;functions.c: 29:     PEIE=1;
   602  00B1  170B               	bsf	11,6	;volatile
   603  00B2                     l669:
   604                           
   605                           ;functions.c: 30:     TMR2IE=1;
   606  00B2  148D               	bsf	13,1	;volatile
   607  00B3                     l21:
   608  00B3  0008               	return
   609  00B4                     __end_of_init:
   610                           
   611                           	psect	text2
   612  008B                     __ptext2:	
   613 ;; *************** function _tmr2Int *****************
   614 ;; Defined at:
   615 ;;		line 93 in file "main.c"
   616 ;; Parameters:    Size  Location     Type
   617 ;;		None
   618 ;; Auto vars:     Size  Location     Type
   619 ;;		None
   620 ;; Return value:  Size  Location     Type
   621 ;;                  1    wreg      void 
   622 ;; Registers used:
   623 ;;		wreg, status,2, status,0
   624 ;; Tracked objects:
   625 ;;		On entry : 0/0
   626 ;;		On exit  : 0/0
   627 ;;		Unchanged: 0/0
   628 ;; Data sizes:     COMMON   BANK0
   629 ;;      Params:         0       0
   630 ;;      Locals:         0       0
   631 ;;      Temps:          0       3
   632 ;;      Totals:         0       3
   633 ;;Total ram usage:        3 bytes
   634 ;; Hardware stack levels used: 1
   635 ;; This function calls:
   636 ;;		Nothing
   637 ;; This function is called by:
   638 ;;		Interrupt level 1
   639 ;; This function uses a non-reentrant model
   640 ;;
   641                           
   642                           
   643                           ;psect for function _tmr2Int
   644  008B                     _tmr2Int:
   645  008B                     i1l721:
   646                           
   647                           ;main.c: 95:     PWM_counter++;
   648  008B  3001               	movlw	1
   649  008C  00C7               	movwf	??_tmr2Int
   650  008D  0847               	movf	??_tmr2Int,w
   651  008E  07C5               	addwf	_PWM_counter,f
   652  008F                     i1l723:
   653                           
   654                           ;main.c: 97:     if(PWM_counter>=PWM_period)
   655  008F  084D               	movf	_PWM_period,w
   656  0090  0245               	subwf	_PWM_counter,w
   657  0091  1C03               	skipc
   658  0092  2894               	goto	u21_21
   659  0093  2895               	goto	u21_20
   660  0094                     u21_21:
   661  0094  2897               	goto	i1l729
   662  0095                     u21_20:
   663  0095                     i1l725:
   664                           
   665                           ;main.c: 98:     {;main.c: 99:         RA2=1;
   666  0095  1505               	bsf	5,2	;volatile
   667  0096                     i1l727:
   668                           
   669                           ;main.c: 100:         PWM_counter=0;
   670  0096  01C5               	clrf	_PWM_counter
   671  0097                     i1l729:
   672                           
   673                           ;main.c: 103:     if(PWM_counter>=PWM_high)
   674  0097  0846               	movf	_PWM_high,w
   675  0098  0245               	subwf	_PWM_counter,w
   676  0099  1C03               	skipc
   677  009A  289C               	goto	u22_21
   678  009B  289D               	goto	u22_20
   679  009C                     u22_21:
   680  009C  289E               	goto	i1l70
   681  009D                     u22_20:
   682  009D                     i1l731:
   683                           
   684                           ;main.c: 104:     {;main.c: 105:         RA2=0;
   685  009D  1105               	bcf	5,2	;volatile
   686  009E                     i1l70:	
   687                           ;main.c: 106:     }
   688                           
   689                           
   690                           ;main.c: 108:     TMR2IF=0;
   691  009E  108C               	bcf	12,1	;volatile
   692  009F                     i1l71:	
   693                           ;main.c: 109:     return;
   694                           
   695  009F  0849               	movf	??_tmr2Int+2,w
   696  00A0  008A               	movwf	10
   697  00A1  0E48               	swapf	??_tmr2Int+1,w
   698  00A2  0083               	movwf	3
   699  00A3  0EFE               	swapf	btemp,f
   700  00A4  0E7E               	swapf	btemp,w
   701  00A5  0009               	retfie
   702  00A6                     __end_of_tmr2Int:
   703  007E                     btemp	set	126	;btemp
   704  007E                     wtemp0	set	126
   705                           
   706                           	psect	intentry
   707  0004                     __pintentry:	
   708                           ;incstack = 0
   709                           ; Regs used in _tmr2Int: [wreg+status,2+status,0]
   710                           
   711  0004                     interrupt_function:
   712  007E                     saved_w	set	btemp
   713  0004  00FE               	movwf	btemp
   714  0005  0E03               	swapf	3,w
   715  0006  00C8               	movwf	??_tmr2Int+1
   716  0007  080A               	movf	10,w
   717  0008  00C9               	movwf	??_tmr2Int+2
   718  0009  288B               	ljmp	_tmr2Int
   719                           
   720                           	psect	config
   721                           
   722                           ;Config register CONFIG @ 0x2007
   723                           ;	Oscillator Selection bits
   724                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
   725                           ;	Brown-out Reset Enable
   726                           ;	BOREN = ON, Brown-out Reset enabled
   727                           ;	Watchdog Timer Enable
   728                           ;	WDTE = OFF, WDT disabled
   729                           ;	Power-up Timer Enable bit
   730                           ;	PWRTE = ON, PWRT enabled
   731                           ;	MCLR Pin Function Select bit
   732                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   733                           ;	Code Protection bit
   734                           ;	CP = ON, Program memory code protection is enabled
   735                           ;	Low-Voltage Programming Enable
   736                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   737                           ;	Brown-out Reset Selection bits
   738                           ;	LPBOR = ON, BOR enabled
   739                           ;	Brown-out Reset Voltage Selection
   740                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
   741                           ;	Flash Memory Self-Write Protection
   742                           ;	WRT = ALL, 000h to 1FFh write protected, no addresses may be modified by PMCON control
   743  2007                     	org	8199
   744  2007  2206               	dw	8710

Data Sizes:
    Strings     0
    Constant    0
    Data        1
    BSS         7
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      6      14

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _tmr2Int in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _tmr2Int in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0       0
                                              3 BANK0      3     3      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (2) _tmr2Int                                              3     3      0       0
                                              0 BANK0      3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 _tmr2Int (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK0               3E      6       E       3       22.6%
BITBANK0            3E      0       0       6        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
BITCOMMON            0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       E       5        0.0%
ABS                  0      0       E       4        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Tue Aug 17 10:48:40 2021

                     l21 00B3                      l701 005D                      l711 006D  
                    l703 005F                      l713 0071                      l705 0063  
                    l715 0075                      l707 0067                      l661 00A9  
                    l717 0084                      l709 0069                      l663 00AD  
                    l719 0085                      l665 00AF                      l657 00A6  
                    l681 0025                      l673 0016                      l667 00B1  
                    l659 00A8                      l691 004B                      l683 0032  
                    l675 0017                      l669 00B2                      l693 004F  
                    l685 0036                      l677 0018                      l695 0053  
                    l687 003C                      l679 001F                      l697 0055  
                    l689 0049                      l699 0059                      _GIE 005F  
                    _RA0 0028                      _RA1 0029                      _RA2 002A  
                    _RA3 002B                      u200 0084                      u120 0025  
                    u201 0083                      u121 0024                      u130 003C  
                    u131 003B                      u140 004F                      u141 004E  
                    u150 0059                      u151 0058                      u160 0063  
                    u161 0062                      u170 006D                      u171 006C  
                    u180 0071                      u181 0070                      u237 001A  
                    u190 0075                      _PR2 0012                      u191 0074  
                    u247 002B                      u257 0042               _PWM_period 004D  
                   _PEIE 005E                     i1l70 009E                     i1l71 009F  
       _NoCommandCounter 0040                     _WPUA 0009                     _main 0016  
                   _init 00A6                     btemp 007E              _PWM_counter 0045  
                   start 000A                    ?_main 0047                    ?_init 0047  
                  _T2CON 0013                    i1l721 008B                    i1l731 009D  
                  i1l723 008F                    i1l725 0095                    i1l727 0096  
                  i1l729 0097                    u21_20 0095                    u21_21 0094  
                  u22_20 009D                    u22_21 009C                    _PORTA 0005  
                  _TRISA 0006          __end_of_tmr2Int 00A6                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 000B  
           __end_of_main 008B             __end_of_init 00B4                   ??_main 004A  
                 ??_init 0000                   _ANSELA 0008                   _OSCCON 0010  
                 _TMR2IE 0069                   _TMR2IF 0061                ??_tmr2Int 0047  
                 saved_w 007E  __end_of__initialization 0014           __pcstackCOMMON 0000  
           __pidataBANK0 00B4               __pbssBANK0 0040               __pmaintext 0016  
             __pintentry 0004                  _PWM_set 0044                  __ptext1 00A6  
                __ptext2 008B                  _tmr2Int 008B     end_of_initialization 0014  
    start_initialization 000B              __pdataBANK0 004D                ___latbits 0000  
          __pcstackBANK0 0047                 ?_tmr2Int 0047        interrupt_function 0004  
               _PWM_high 0046         __size_of_tmr2Int 001B            __size_of_main 0075  
          __size_of_init 000E             _time_counter 0042                 intlevel1 0000  
