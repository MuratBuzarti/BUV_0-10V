

Microchip MPLAB XC8 Assembler V2.32 build 20210201212658 
                                                                                               Wed Oct 20 02:27:36 2021

Microchip MPLAB XC8 C Compiler v2.32 (Free license) build 20210201212658 Og1 
     1                           	processor	10F322
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.32
    14                           ; Generated 23/11/2020 GMT
    15                           ; 
    16                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution. Publication is not required when
    30                           ;        this file is used in an embedded application.
    31                           ; 
    32                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    33                           ;        software without specific prior written permission.
    34                           ; 
    35                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    36                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    37                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    38                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    39                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    40                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    41                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    42                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    43                           ; 
    44                           ; 
    45                           ; Code-generator required, PIC10F322 Definitions
    46                           ; 
    47                           ; SFR Addresses
    48  0000                     	;# 
    49  0001                     	;# 
    50  0002                     	;# 
    51  0003                     	;# 
    52  0004                     	;# 
    53  0005                     	;# 
    54  0006                     	;# 
    55  0007                     	;# 
    56  0008                     	;# 
    57  0009                     	;# 
    58  000A                     	;# 
    59  000B                     	;# 
    60  000C                     	;# 
    61  000D                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0016                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  0019                     	;# 
    76  001A                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0020                     	;# 
    83  0020                     	;# 
    84  0021                     	;# 
    85  0022                     	;# 
    86  0022                     	;# 
    87  0023                     	;# 
    88  0024                     	;# 
    89  0025                     	;# 
    90  0026                     	;# 
    91  0027                     	;# 
    92  0027                     	;# 
    93  0028                     	;# 
    94  0029                     	;# 
    95  002A                     	;# 
    96  002A                     	;# 
    97  002B                     	;# 
    98  002C                     	;# 
    99  002D                     	;# 
   100  002E                     	;# 
   101  0030                     	;# 
   102  0031                     	;# 
   103  0032                     	;# 
   104  0033                     	;# 
   105  0034                     	;# 
   106  0035                     	;# 
   107  0036                     	;# 
   108  0037                     	;# 
   109  0038                     	;# 
   110  0039                     	;# 
   111  003A                     	;# 
   112  003B                     	;# 
   113  003C                     	;# 
   114  003D                     	;# 
   115  003E                     	;# 
   116  003F                     	;# 
   117  0000                     	;# 
   118  0001                     	;# 
   119  0002                     	;# 
   120  0003                     	;# 
   121  0004                     	;# 
   122  0005                     	;# 
   123  0006                     	;# 
   124  0007                     	;# 
   125  0008                     	;# 
   126  0009                     	;# 
   127  000A                     	;# 
   128  000B                     	;# 
   129  000C                     	;# 
   130  000D                     	;# 
   131  000E                     	;# 
   132  000F                     	;# 
   133  0010                     	;# 
   134  0011                     	;# 
   135  0012                     	;# 
   136  0013                     	;# 
   137  0014                     	;# 
   138  0015                     	;# 
   139  0016                     	;# 
   140  0016                     	;# 
   141  0017                     	;# 
   142  0018                     	;# 
   143  0019                     	;# 
   144  0019                     	;# 
   145  001A                     	;# 
   146  001B                     	;# 
   147  001C                     	;# 
   148  001D                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  0020                     	;# 
   152  0020                     	;# 
   153  0021                     	;# 
   154  0022                     	;# 
   155  0022                     	;# 
   156  0023                     	;# 
   157  0024                     	;# 
   158  0025                     	;# 
   159  0026                     	;# 
   160  0027                     	;# 
   161  0027                     	;# 
   162  0028                     	;# 
   163  0029                     	;# 
   164  002A                     	;# 
   165  002A                     	;# 
   166  002B                     	;# 
   167  002C                     	;# 
   168  002D                     	;# 
   169  002E                     	;# 
   170  0030                     	;# 
   171  0031                     	;# 
   172  0032                     	;# 
   173  0033                     	;# 
   174  0034                     	;# 
   175  0035                     	;# 
   176  0036                     	;# 
   177  0037                     	;# 
   178  0038                     	;# 
   179  0039                     	;# 
   180  003A                     	;# 
   181  003B                     	;# 
   182  003C                     	;# 
   183  003D                     	;# 
   184  003E                     	;# 
   185  003F                     	;# 
   186  0018                     _PWM2DCH	set	24
   187  0013                     _T2CON	set	19
   188  0012                     _PR2	set	18
   189  0009                     _WPUA	set	9
   190  0008                     _ANSELA	set	8
   191  0006                     _TRISA	set	6
   192  0005                     _PORTA	set	5
   193  0010                     _OSCCON	set	16
   194  0028                     _RA0	set	40
   195  0029                     _RA1	set	41
   196  002B                     _RA3	set	43
   197  0069                     _TMR2IE	set	105
   198  005E                     _PEIE	set	94
   199                           
   200                           	psect	cinit
   201  01F9                     start_initialization:	
   202                           ; #config settings
   203                           
   204  01F9                     __initialization:
   205                           
   206                           ; Clear objects allocated to BANK0
   207  01F9  01C0               	clrf	__pbssBANK0& (0+127)
   208  01FA  01C1               	clrf	(__pbssBANK0+1)& (0+127)
   209  01FB  01C2               	clrf	(__pbssBANK0+2)& (0+127)
   210  01FC  01C3               	clrf	(__pbssBANK0+3)& (0+127)
   211  01FD  01C4               	clrf	(__pbssBANK0+4)& (0+127)
   212  01FE                     end_of_initialization:	
   213                           ;End of C runtime variable initialization code
   214                           
   215  01FE                     __end_of__initialization:
   216  01FE  0183               	clrf	3
   217  01FF  298D               	ljmp	_main	;jump to C main() function
   218                           
   219                           	psect	bssBANK0
   220  0040                     __pbssBANK0:
   221  0040                     _NoCommandCounter:
   222  0040                     	ds	2
   223  0042                     _time_counter:
   224  0042                     	ds	2
   225  0044                     _PWM_set:
   226  0044                     	ds	1
   227                           
   228                           	psect	cstackCOMMON
   229  0000                     __pcstackCOMMON:
   230  0000                     ??_init:
   231                           
   232                           	psect	cstackBANK0
   233  0045                     __pcstackBANK0:	
   234                           ; 1 bytes @ 0x0
   235                           
   236  0045                     ?_init:
   237  0045                     ?_main:	
   238                           ; 1 bytes @ 0x0
   239                           
   240  0045                     ??_main:	
   241                           ; 1 bytes @ 0x0
   242                           
   243                           
   244                           ; 1 bytes @ 0x0
   245  0045                     	ds	2
   246                           
   247                           	psect	maintext
   248  018D                     __pmaintext:	
   249 ;;
   250 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   251 ;;
   252 ;; *************** function _main *****************
   253 ;; Defined at:
   254 ;;		line 28 in file "main.c"
   255 ;; Parameters:    Size  Location     Type
   256 ;;		None
   257 ;; Auto vars:     Size  Location     Type
   258 ;;		None
   259 ;; Return value:  Size  Location     Type
   260 ;;                  1    wreg      void 
   261 ;; Registers used:
   262 ;;		wreg, status,2, status,0, pclath, cstack
   263 ;; Tracked objects:
   264 ;;		On entry : B00/0
   265 ;;		On exit  : 0/0
   266 ;;		Unchanged: 0/0
   267 ;; Data sizes:     COMMON   BANK0
   268 ;;      Params:         0       0
   269 ;;      Locals:         0       0
   270 ;;      Temps:          0       2
   271 ;;      Totals:         0       2
   272 ;;Total ram usage:        2 bytes
   273 ;; Hardware stack levels required when called: 1
   274 ;; This function calls:
   275 ;;		_init
   276 ;; This function is called by:
   277 ;;		Startup code after reset
   278 ;; This function uses a non-reentrant model
   279 ;;
   280                           
   281                           
   282                           ;psect for function _main
   283  018D                     _main:
   284  018D                     l642:	
   285                           ;incstack = 0
   286                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   287                           
   288                           
   289                           ;main.c: 30:     init();
   290  018D  217F               	fcall	_init
   291  018E                     l644:
   292                           
   293                           ;main.c: 34:     {;main.c: 47:         _delay((unsigned long)((500)*(8000000/4000000.0))
      +                          );
   294  018E  30C7               	movlw	199
   295  018F  00C5               	movwf	??_main
   296  0190                     u197:
   297  0190  2991               	nop2
   298  0191  0BC5               	decfsz	??_main,f
   299  0192  2990               	goto	u197
   300  0193  2994               	nop2
   301  0194  2995               	nop2
   302  0195                     l646:
   303                           
   304                           ;main.c: 49:         if(PWM2DCH<PWM_set)
   305  0195  0844               	movf	_PWM_set,w
   306  0196  0218               	subwf	24,w	;volatile
   307  0197  1803               	skipnc
   308  0198  299A               	goto	u101
   309  0199  299B               	goto	u100
   310  019A                     u101:
   311  019A  29A8               	goto	l652
   312  019B                     u100:
   313  019B                     l648:
   314                           
   315                           ;main.c: 50:         {;main.c: 51:             _delay((unsigned long)((50)*(8000000/4000
      +                          .0)));
   316  019B  3082               	movlw	130
   317  019C  00C6               	movwf	??_main+1
   318  019D  30DD               	movlw	221
   319  019E  00C5               	movwf	??_main
   320  019F                     u207:
   321  019F  0BC5               	decfsz	??_main,f
   322  01A0  299F               	goto	u207
   323  01A1  0BC6               	decfsz	??_main+1,f
   324  01A2  299F               	goto	u207
   325  01A3  29A4               	nop2
   326  01A4                     l650:
   327                           
   328                           ;main.c: 52:             PWM2DCH++;
   329  01A4  3001               	movlw	1
   330  01A5  00C5               	movwf	??_main
   331  01A6  0845               	movf	??_main,w
   332  01A7  0798               	addwf	24,f	;volatile
   333  01A8                     l652:
   334                           
   335                           ;main.c: 55:         if(PWM2DCH>PWM_set)
   336  01A8  0818               	movf	24,w	;volatile
   337  01A9  0244               	subwf	_PWM_set,w
   338  01AA  1803               	skipnc
   339  01AB  29AD               	goto	u111
   340  01AC  29AE               	goto	u110
   341  01AD                     u111:
   342  01AD  29B9               	goto	l658
   343  01AE                     u110:
   344  01AE                     l654:
   345                           
   346                           ;main.c: 56:         {;main.c: 57:             _delay((unsigned long)((50)*(8000000/4000
      +                          .0)));
   347  01AE  3082               	movlw	130
   348  01AF  00C6               	movwf	??_main+1
   349  01B0  30DD               	movlw	221
   350  01B1  00C5               	movwf	??_main
   351  01B2                     u217:
   352  01B2  0BC5               	decfsz	??_main,f
   353  01B3  29B2               	goto	u217
   354  01B4  0BC6               	decfsz	??_main+1,f
   355  01B5  29B2               	goto	u217
   356  01B6  29B7               	nop2
   357  01B7                     l656:
   358                           
   359                           ;main.c: 58:             PWM2DCH--;
   360  01B7  3001               	movlw	1
   361  01B8  0298               	subwf	24,f	;volatile
   362  01B9                     l658:
   363                           
   364                           ;main.c: 61:         if (RA3 == 0) {
   365  01B9  1985               	btfsc	5,3	;volatile
   366  01BA  29BC               	goto	u121
   367  01BB  29BD               	goto	u120
   368  01BC                     u121:
   369  01BC  29C3               	goto	l664
   370  01BD                     u120:
   371  01BD                     l660:
   372                           
   373                           ;main.c: 62:             PWM_set = 50;
   374  01BD  3032               	movlw	50
   375  01BE  00C5               	movwf	??_main
   376  01BF  0845               	movf	??_main,w
   377  01C0  00C4               	movwf	_PWM_set
   378  01C1                     l662:
   379                           
   380                           ;main.c: 63:             NoCommandCounter = 0;
   381  01C1  01C0               	clrf	_NoCommandCounter
   382  01C2  01C1               	clrf	_NoCommandCounter+1
   383  01C3                     l664:
   384                           
   385                           ;main.c: 66:         if (RA1 == 0) {
   386  01C3  1885               	btfsc	5,1	;volatile
   387  01C4  29C6               	goto	u131
   388  01C5  29C7               	goto	u130
   389  01C6                     u131:
   390  01C6  29CD               	goto	l670
   391  01C7                     u130:
   392  01C7                     l666:
   393                           
   394                           ;main.c: 67:             PWM_set = 75;
   395  01C7  304B               	movlw	75
   396  01C8  00C5               	movwf	??_main
   397  01C9  0845               	movf	??_main,w
   398  01CA  00C4               	movwf	_PWM_set
   399  01CB                     l668:
   400                           
   401                           ;main.c: 68:             NoCommandCounter = 0;
   402  01CB  01C0               	clrf	_NoCommandCounter
   403  01CC  01C1               	clrf	_NoCommandCounter+1
   404  01CD                     l670:
   405                           
   406                           ;main.c: 71:         if (RA0 == 0) {
   407  01CD  1805               	btfsc	5,0	;volatile
   408  01CE  29D0               	goto	u141
   409  01CF  29D1               	goto	u140
   410  01D0                     u141:
   411  01D0  29D7               	goto	l676
   412  01D1                     u140:
   413  01D1                     l672:
   414                           
   415                           ;main.c: 72:             PWM_set =90;
   416  01D1  305A               	movlw	90
   417  01D2  00C5               	movwf	??_main
   418  01D3  0845               	movf	??_main,w
   419  01D4  00C4               	movwf	_PWM_set
   420  01D5                     l674:
   421                           
   422                           ;main.c: 73:             NoCommandCounter = 0;
   423  01D5  01C0               	clrf	_NoCommandCounter
   424  01D6  01C1               	clrf	_NoCommandCounter+1
   425  01D7                     l676:
   426                           
   427                           ;main.c: 77:         if ((RA3==1)&&(RA1==1)&&(RA0==1))
   428  01D7  1D85               	btfss	5,3	;volatile
   429  01D8  29DA               	goto	u151
   430  01D9  29DB               	goto	u150
   431  01DA                     u151:
   432  01DA  298E               	goto	l644
   433  01DB                     u150:
   434  01DB                     l678:
   435  01DB  1C85               	btfss	5,1	;volatile
   436  01DC  29DE               	goto	u161
   437  01DD  29DF               	goto	u160
   438  01DE                     u161:
   439  01DE  298E               	goto	l644
   440  01DF                     u160:
   441  01DF                     l680:
   442  01DF  1C05               	btfss	5,0	;volatile
   443  01E0  29E2               	goto	u171
   444  01E1  29E3               	goto	u170
   445  01E2                     u171:
   446  01E2  298E               	goto	l644
   447  01E3                     u170:
   448  01E3                     l682:
   449                           
   450                           ;main.c: 78:         {;main.c: 79:             NoCommandCounter++;
   451  01E3  3001               	movlw	1
   452  01E4  07C0               	addwf	_NoCommandCounter,f
   453  01E5  1803               	skipnc
   454  01E6  0AC1               	incf	_NoCommandCounter+1,f
   455  01E7  3000               	movlw	0
   456  01E8  07C1               	addwf	_NoCommandCounter+1,f
   457                           
   458                           ;main.c: 80:             if (NoCommandCounter>=1000)
   459  01E9  3003               	movlw	3
   460  01EA  0241               	subwf	_NoCommandCounter+1,w
   461  01EB  30E8               	movlw	232
   462  01EC  1903               	skipnz
   463  01ED  0240               	subwf	_NoCommandCounter,w
   464  01EE  1C03               	skipc
   465  01EF  29F1               	goto	u181
   466  01F0  29F2               	goto	u180
   467  01F1                     u181:
   468  01F1  298E               	goto	l644
   469  01F2                     u180:
   470  01F2                     l684:
   471                           
   472                           ;main.c: 81:             {;main.c: 82:                 PWM2DCH = 0;
   473  01F2  0198               	clrf	24	;volatile
   474  01F3                     l686:
   475                           
   476                           ;main.c: 83:                 NoCommandCounter=1000;
   477  01F3  30E8               	movlw	232
   478  01F4  00C0               	movwf	_NoCommandCounter
   479  01F5  3003               	movlw	3
   480  01F6  00C1               	movwf	_NoCommandCounter+1
   481  01F7  298E               	goto	l644
   482  01F8  2800               	ljmp	start
   483  01F9                     __end_of_main:
   484                           
   485                           	psect	text1
   486  017F                     __ptext1:	
   487 ;; *************** function _init *****************
   488 ;; Defined at:
   489 ;;		line 13 in file "functions.c"
   490 ;; Parameters:    Size  Location     Type
   491 ;;		None
   492 ;; Auto vars:     Size  Location     Type
   493 ;;		None
   494 ;; Return value:  Size  Location     Type
   495 ;;                  1    wreg      void 
   496 ;; Registers used:
   497 ;;		wreg, status,2
   498 ;; Tracked objects:
   499 ;;		On entry : 0/0
   500 ;;		On exit  : 0/0
   501 ;;		Unchanged: 0/0
   502 ;; Data sizes:     COMMON   BANK0
   503 ;;      Params:         0       0
   504 ;;      Locals:         0       0
   505 ;;      Temps:          0       0
   506 ;;      Totals:         0       0
   507 ;;Total ram usage:        0 bytes
   508 ;; Hardware stack levels used: 1
   509 ;; This function calls:
   510 ;;		Nothing
   511 ;; This function is called by:
   512 ;;		_main
   513 ;; This function uses a non-reentrant model
   514 ;;
   515                           
   516                           
   517                           ;psect for function _init
   518  017F                     _init:
   519  017F                     l626:	
   520                           ;incstack = 0
   521                           ; Regs used in _init: [wreg+status,2]
   522                           
   523                           
   524                           ;functions.c: 16:     OSCCON=0b01100000;
   525  017F  3060               	movlw	96
   526  0180  0090               	movwf	16	;volatile
   527  0181                     l628:
   528                           
   529                           ;functions.c: 19:     PORTA=0;
   530  0181  0185               	clrf	5	;volatile
   531  0182                     l630:
   532                           
   533                           ;functions.c: 20:     TRISA=0b00001011;
   534  0182  300B               	movlw	11
   535  0183  0086               	movwf	6	;volatile
   536                           
   537                           ;functions.c: 21:     ANSELA=0;
   538  0184  0188               	clrf	8	;volatile
   539                           
   540                           ;functions.c: 22:     WPUA=0;
   541  0185  0189               	clrf	9	;volatile
   542  0186                     l632:
   543                           
   544                           ;functions.c: 25:     PR2=50;
   545  0186  3032               	movlw	50
   546  0187  0092               	movwf	18	;volatile
   547  0188                     l634:
   548                           
   549                           ;functions.c: 26:     T2CON=0b00000100;
   550  0188  3004               	movlw	4
   551  0189  0093               	movwf	19	;volatile
   552  018A                     l636:
   553                           
   554                           ;functions.c: 29:     PEIE=1;
   555  018A  170B               	bsf	11,6	;volatile
   556  018B                     l638:
   557                           
   558                           ;functions.c: 30:     TMR2IE=1;
   559  018B  148D               	bsf	13,1	;volatile
   560  018C                     l21:
   561  018C  0008               	return
   562  018D                     __end_of_init:
   563  007E                     btemp	set	126	;btemp
   564  007E                     wtemp0	set	126
   565                           
   566                           	psect	config
   567                           
   568                           ;Config register CONFIG @ 0x2007
   569                           ;	Oscillator Selection bits
   570                           ;	FOSC = INTOSC, INTOSC oscillator: CLKIN function disabled
   571                           ;	Brown-out Reset Enable
   572                           ;	BOREN = ON, Brown-out Reset enabled
   573                           ;	Watchdog Timer Enable
   574                           ;	WDTE = OFF, WDT disabled
   575                           ;	Power-up Timer Enable bit
   576                           ;	PWRTE = ON, PWRT enabled
   577                           ;	MCLR Pin Function Select bit
   578                           ;	MCLRE = OFF, MCLR pin function is digital input, MCLR internally tied to VDD
   579                           ;	Code Protection bit
   580                           ;	CP = ON, Program memory code protection is enabled
   581                           ;	Low-Voltage Programming Enable
   582                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
   583                           ;	Brown-out Reset Selection bits
   584                           ;	LPBOR = ON, BOR enabled
   585                           ;	Brown-out Reset Voltage Selection
   586                           ;	BORV = HI, Brown-out Reset Voltage (Vbor), high trip point selected.
   587                           ;	Flash Memory Self-Write Protection
   588                           ;	WRT = ALL, 000h to 1FFh write protected, no addresses may be modified by PMCON control
   589  2007                     	org	8199
   590  2007  2206               	dw	8710

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         5
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON            0      0       0
    BANK0            62      2       7

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 BANK0      2     2      0
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            0      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               0      0       0       1        0.0%
STACK                0      0       0       2        0.0%
BANK0               3E      2       7       3       11.3%
ABS                  0      0       7       4        0.0%
DATA                 0      0       7       5        0.0%
BITBANK0            3E      0       0       6        0.0%


Microchip Technology PIC Macro Assembler V2.32 build 20210201212658 
Symbol Table                                                                                   Wed Oct 20 02:27:36 2021

                     l21 018C                      l630 0182                      l632 0186  
                    l634 0188                      l626 017F                      l650 01A4  
                    l642 018D                      l636 018A                      l628 0181  
                    l660 01BD                      l652 01A8                      l644 018E  
                    l638 018B                      l670 01CD                      l662 01C1  
                    l654 01AE                      l646 0195                      l680 01DF  
                    l672 01D1                      l664 01C3                      l656 01B7  
                    l648 019B                      l682 01E3                      l674 01D5  
                    l666 01C7                      l658 01B9                      l684 01F2  
                    l676 01D7                      l668 01CB                      l686 01F3  
                    l678 01DB                      _RA0 0028                      _RA1 0029  
                    _RA3 002B                      u100 019B                      u101 019A  
                    u110 01AE                      u111 01AD                      u120 01BD  
                    u121 01BC                      u130 01C7                      u131 01C6  
                    u140 01D1                      u141 01D0                      u150 01DB  
                    u151 01DA                      u207 019F                      u160 01DF  
                    u161 01DE                      u217 01B2                      u170 01E3  
                    u171 01E2                      u180 01F2                      u181 01F1  
                    _PR2 0012                      u197 0190                     _PEIE 005E  
       _NoCommandCounter 0040                     _WPUA 0009                     _main 018D  
                   _init 017F                     btemp 007E                     start 0000  
                  ?_main 0045                    ?_init 0045                    _T2CON 0013  
                  _PORTA 0005                    _TRISA 0006                    status 0003  
                  wtemp0 007E          __initialization 01F9             __end_of_main 01F9  
           __end_of_init 018D                   ??_main 0045                   ??_init 0000  
                 _ANSELA 0008                   _OSCCON 0010                   _TMR2IE 0069  
__end_of__initialization 01FE           __pcstackCOMMON 0000               __pbssBANK0 0040  
             __pmaintext 018D                  _PWM2DCH 0018                  _PWM_set 0044  
                __ptext1 017F     end_of_initialization 01FE      start_initialization 01F9  
              ___latbits 0000            __pcstackBANK0 0045            __size_of_main 006C  
          __size_of_init 000E             _time_counter 0042  
